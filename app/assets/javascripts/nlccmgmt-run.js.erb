String.prototype.trunc = String.prototype.trunc ||
  function(n){
    console.log('trunc');
      return (this.length > n) ? this.substr(0, n-1) + '&hellip;' : this;
  };
/* global nlccmgmtapp */
nlccmgmtapp.run(["$rootScope", "$state", "$http", "$q", function($rootScope, $state, $http, $q) {
  console.log("nlcc mgmt run");
  $rootScope.$state = $state; // state to be accessed from view
  
  $rootScope.fileexist = function(url) {
    console.log("Check file exist: " + url);
    
    var deferred = $q.defer();
    
    

    /*if(url==''){
      deferred.reject();
      return deferred.promise;
    }*/
    
    $http({
      method: 'GET',
      url: "/utils/aws/isexist.json?url=" + url
    }).success(function(data){
      deferred.resolve(data);
    }).error(function(){
      deferred.reject("There is an error");
    });
    
    return deferred.promise;
  }
  
  $rootScope.filetype = function(filename) {
    return filename.split('.').pop();
  }
  
  $rootScope.isMusic = function(filename) {
    var ftype = $rootScope.filetype(filename);
    
    if( ftype=='mp3' || ftype == 'wav')
      return true;
    else
      return false;
  }
  
  $rootScope.isPhoto = function(filename) {
    var ftype = $rootScope.filetype(filename);
    
    if( ftype =='jpg' || ftype == 'png' || ftype == 'gif')
      return true;
    else
      return false;
  }
  
  $rootScope.current_mgmt = gon.current_mgmt;
  $rootScope.is_admin = gon.is_admin;
  $rootScope.env = gon.env
  $rootScope.is_unapproved = gon.is_unapproved;
  //$rootScope.$settings = settings; // state to be accessed from view
}]);