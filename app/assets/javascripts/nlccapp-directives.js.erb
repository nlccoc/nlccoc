/***
GLobal Directives
***/
/* global angular, $  */

// Route State Load Spinner(used on page or content load)
angular.module('nlcc.tools', [])
.directive('ngSpinnerBar', ['$rootScope', '$timeout', 
  function($rootScope, $timeout) {
    return {
      link: function(scope, element, attrs) {
        // by defult hide the spinner bar
        element.addClass('hide'); // hide spinner bar by default
        //console.log('hide spinner');
        // display the spinner bar whenever the route changes(the content part started loading)
        $rootScope.$on('$stateChangeStart', function() {
          element.removeClass('hide'); // show spinner bar
          console.log("$stateChangeStart");
        });

        // hide the spinner bar on rounte change success(after the content loaded)
        $rootScope.$on('$stateChangeSuccess', function() {
          element.addClass('hide'); // hide spinner bar
          console.log("$stateChangeSuccess");
          $('body').removeClass('page-on-load'); // remove page loading indicator
          $timeout(function(){
            Layout.setSidebarMenuActiveLink('match'); // activate selected link in the sidebar menu
          }, 0);
           
          // auto scorll to page top
          //setTimeout(function () {
          //    App.scrollTop(); // scroll to the top on content load
          //}, $rootScope.settings.layout.pageAutoScrollOnLoad);     
        });

        // handle errors
        $rootScope.$on('$stateNotFound', function() {
          element.addClass('hide'); // hide spinner bar
        });

        // handle errors
        $rootScope.$on('$stateChangeError', function() {
          element.addClass('hide'); // hide spinner bar
        });
      }
    };
  }
]).directive('a', function() {
  // Handle global LINK click
    return {
        restrict: 'E',
        link: function(scope, elem, attrs) {
            if (attrs.ngClick || attrs.href === '' || attrs.href === '#') {
                elem.on('click', function(e) {
                    e.preventDefault(); // prevent link click for above criteria
                });
            }
        }
    };
}).directive('dropdownMenuHover', function () {
  // Handle Dropdown Hover Plugin Integration
  return {
    link: function (scope, elem) {
      //elem.dropdownHover();
    }
  };  
}).directive('onFinishRender', ['$timeout', function ($timeout) {
  return {
    restrict: 'A',
    link: function (scope, element, attr) {
      if (scope.$last === true) {
        $timeout(function () {
          scope.$emit(attr.onFinishRender);
        });
      }
    }
  }
}]).directive('datetimepicker', function(){
	return {
		require: '?ngModel',
		restrict: 'A',
		scope: {
      format: "@"
		},
		link: function(scope, element, attrs, ngModel){
      
			if(!ngModel) return; // do nothing if no ng-model
			ngModel.$render = function(){
				element.val( ngModel.$viewValue || '' );
			}
      if (typeof scope.format === "undefined")
			  if (!attrs.format) {
			    attrs.format = '';
			  }
			  //console.log('format: ' + scope.format)
			  element.datetimepicker({
			    format: attrs.format
			  });
			  

			element.on('dp.change', function(){
			  //console.log('dp.change');
				scope.$apply(read);
			});
			
			element.on('dp.change', function(){
			  //console.log('dp.update');
			});

			//read();

			function read() {
			  //console.log('read');
				var value = element.val();
				ngModel.$setViewValue(value);
			}
		}
	}
}).directive('libraryList', ['$compile', '$sce', function($compile, $sce){
  return {
    restrict: 'E',
    templateUrl: 'mgmts/libraryitem.html',
    replace: true,
    link: function(scope, elem, attrs) {
      
      scope.trustSrc = function(src) {
        return $sce.trustAsResourceUrl(src);
      }
      
      var url = attrs.src.replace('//files.natecheng.me/','');
      
      //console.log(attrs.src);
      scope.fileexist(url).then(function(response){
        //console.log(response);
        var myEle = ''
        if(response.exist){
          //console.log(url + ' :fulfilled');
          
          
          if (scope.env == 'production')
            myEle = '<a class=\'item-thumb\' href=\'#\'> \
                <div class="image-tile hover-tile outer-title text-center"> \
                  <img src=\'//files.natecheng.me/' + url + '\' > \
                  <div class="hover-state"> \
                    <span><i class="fa fa-plus fa-2x" aria-hidden="true"></i></span> \
    		          </div> \
  		          </div> \
              </a> \
              <div class=\'item-text\'>' + attrs.title.trunc(13) + '</div>';
          else
            myEle = '<a class=\'item-thumb\' href=\'#\'> \
                <div class="image-tile hover-tile outer-title text-center"> \
                  <img src=\'' + url + '\' > \
                  <div class="hover-state">\
                    <span><i class="fa fa-plus fa-2x" aria-hidden="true"></i></span> \
    		          </div> \
  		          </div> \
              </a><div class=\'item-text\'>' + attrs.title.trunc(13) + '</div>';
          elem.html('');
          elem.append(myEle);
          $compile(myEle)(scope);
        } else {
          
          if(scope.isMusic(attrs.src))
            myEle = '<a class=\'item-music\' href=\'#\'>\
                      <div class="image-tile hover-tile outer-title text-center"> \
        		            <span><i class=\'fa fa-music fa-3x\'></i></span>\
        		            <div class="hover-state">\
                          <span><i class="fa fa-plus fa-2x" aria-hidden="true"></i></span> \
          		          </div> \
      		            </div> \
    		            </a><div class=\'item-text\'>' + attrs.title.trunc(13) + '</div>'
          else if(scope.isPhoto(attrs.src))
            myEle = '<a class=\'item-music\' href=\'#\'> \
                        <div class="image-tile hover-tile outer-title text-center"> \
                          <span><i class=\'fa fa-picture-o fa-3x\'></i></span> \
                          <div class="hover-state">\
                            <span><i class="fa fa-plus fa-2x" aria-hidden="true"></i></span> \
            		          </div> \
            		        </div> \
                      </a><div class=\'item-text\'>' + attrs.title.trunc(13) + '</div>'
          else 
            myEle = '<a class=\'item-music\' href=\'#\'> \
                      <div class="image-tile hover-tile outer-title text-center"> \
        		            <span><i class=\'fa fa-question fa-3x\'></i></span> \
      		              <div class="hover-state">\
                          <span><i class="fa fa-plus fa-2x" aria-hidden="true"></i></span> \
          		          </div> \
          		        </div> \
    		            </a><div class=\'item-text\'>' + attrs.title.trunc(13) + '</div>'
          //console.log(url + ' :rejected');
          elem.html('');
          elem.append(myEle);
          $compile(myEle)(scope);
        }
      }, function(response){
        //console.log(url + ' :rejected');
      })
      
    }
  }
}]);