/* global nlccapp, $, angular, Masonry, jRespond */
var mr_firstSectionHeight,
    mr_nav,
    mr_fixedAt,
    mr_navOuterHeight,
    mr_floatingProjectSections,
    mr_scrollTop = 0,
    $body;

console.log(nlccapp);
    
nlccapp.controller('homeCtrl', ['$scope', '$window', '$ocLazyLoad', function($scope, $window, $ocLazyLoad){
  console.log("Homepage controller");
  $scope.responsiveClass='device-xxx';
  $scope.navFixed = false;
  $scope.outOfSight = false;
  $scope.navScrolled = false;
  $scope.goToTop = false;
  $scope.stage='initial';
  
  $scope.$watch('navScrolled', function(newvalue, oldvalue){
    //console.log('navscroll changed');
  });
  
  $scope.$watch('outOfSight', function(newvalue, oldvalue){
    //console.log('outOfSight changed');
  });
  angular.element(document).ready(function () {
    $scope.stage='ready';
    $body = $('body');
    $scope.responsiveClasses();

    // Disable parallax on mobile

    if ((/Android|iPhone|iPad|iPod|BlackBerry|Windows Phone/i).test(navigator.userAgent || navigator.vendor || window.opera)) {
      $('section').removeClass('parallax');
      $('.background-image-holder').each(function() {
        var imgSrc = $(this).children('img').attr('src');
        console.log(imgSrc);
        $(this).css('background', 'url("' + imgSrc + '")');
        $(this).children('img').hide();
        $(this).css('background-position', 'initial');
      });
      setTimeout(function() {
        $('.background-image-holder').each(function() {
          $(this).addClass('fadeIn');
        });
      }, 200);
    }
    else {
    //$('.parallax-window').parallax({imageSrc: '<%= asset_path("Psalm-118_1-give-thanks.jpg") %>'});
      $('.parallax .background-image-holder').each(function(){
        var imgSrc = $(this).children('img').attr('src');
        console.log(imgSrc);
        $(this).parallax({
          imageSrc: imgSrc
        });
      });
    }
    initTabs();
    // Fix nav to top while scrolling

    mr_nav = $('body .nav-container nav:first');
    mr_navOuterHeight = $('body .nav-container nav:first').outerHeight()-100;
    mr_fixedAt = typeof mr_nav.attr('data-fixed-at') !== typeof undefined ? parseInt(mr_nav.attr('data-fixed-at').replace('px', '')) : parseInt($('section:nth-of-type(1)').outerHeight());
    $scope.updateNav();

    $ocLazyLoad.load('<%= asset_path("parallax.js/parallax") %>');
    //angular.element($window).bind("scroll", function() {
      //console.log("scrolled");
      //console.log($window.pageYOffset);
    //});
    
    // Smooth scroll to inner links

    $('.inner-link').each(function(){
      var href = $(this).attr('href');
      if(href.charAt(0) !== "#"){
        $(this).removeClass('inner-link');
      }
    });

  	if($('.inner-link').length){
  		$('.inner-link').smoothScroll({
  			offset: -55,
  			speed: 800
  		});
    }
    
    $('#owl-carousel-media .entry-image').fitVids();
    initOwlMedia();
    
    /*$('.background-image-holder').each(function() {
      var imgSrc = $(this).children('img').attr('src');
      console.log(imgSrc);
      $(this).css('background', 'url("' + imgSrc + '")');
      $(this).children('img').hide();
      $(this).css('background-position', 'initial');
    });
*/    
    // Fade in background images
  
    /*setTimeout(function() {
      $('.background-image-holder').each(function() {
        $(this).addClass('fadeIn');
      });
    }, 200);
    */
    // Navigation

    if (!$('nav').hasClass('fixed') && !$('nav').hasClass('absolute')) {

      // Make nav container height of nav

      $('.nav-container').css('min-height', $('nav').outerHeight(true));

      $(window).resize(function() {
        $('.nav-container').css('min-height', $('nav').outerHeight(true));
      });

      // Compensate the height of parallax element for inline nav
      if ($(window).width() > 768) {
        $('.parallax:nth-of-type(1) .background-image-holder').css('top', -($('nav').outerHeight(true)));
      }

      // Adjust fullscreen elements
      if ($(window).width() > 768) {
        $('section.fullscreen:nth-of-type(1)').css('height', ($(window).height() - $('nav').outerHeight(true)));
      }

    } else {
      $('body').addClass('nav-is-overlay');
    }

    if ($('nav').hasClass('bg-dark')) {
      $('.nav-container').addClass('bg-dark');
    }
    
    // Menu dropdown positioning

    $('.menu > li > ul').each(function() {
        var menu = $(this).offset();
        var farRight = menu.left + $(this).outerWidth(true);
        if (farRight > $(window).width() && !$(this).hasClass('mega-menu')) {
            $(this).addClass('make-right');
        } else if (farRight > $(window).width() && $(this).hasClass('mega-menu')) {
            var isOnScreen = $(window).width() - menu.left;
            var difference = $(this).outerWidth(true) - isOnScreen;
            $(this).css('margin-left', -(difference));
        }
    });

    // Mobile Menu

    $('.mobile-toggle').click(function() {
        $('.nav-bar').toggleClass('nav-open');
        $(this).toggleClass('active');
    });

    $('.menu li').click(function(e) {
        if (!e) e = window.event;
        e.stopPropagation();
        if ($(this).find('ul').length) {
            $(this).toggleClass('toggle-sub');
        } else {
            $(this).parents('.toggle-sub').removeClass('toggle-sub');
        }
    });

    $('.menu li a').click(function() {
        if ($(this).hasClass('inner-link')){
            $(this).closest('.nav-bar').removeClass('nav-open');
        }
    });

    $('.module.widget-handle').click(function() {
        $(this).toggleClass('toggle-widget-handle');
    });

    $('.search-widget-handle .search-form input').click(function(e){
        if (!e) e = window.event;
        e.stopPropagation();
    });
  
    // Offscreen Nav
    
    if($('.offscreen-toggle').length){
    	$('body').addClass('has-offscreen-nav');
    }
    else{
        $('body').removeClass('has-offscreen-nav');
    }
    
    $('.offscreen-toggle').click(function(){
    	$('.main-container').toggleClass('reveal-nav');
    	$('nav').toggleClass('reveal-nav');
    	$('.offscreen-container').toggleClass('reveal-nav');
    });
    
    $('.main-container').click(function(){
    	if($(this).hasClass('reveal-nav')){
    		$(this).removeClass('reveal-nav');
    		$('.offscreen-container').removeClass('reveal-nav');
    		$('nav').removeClass('reveal-nav');
    	}
    });
    
    $('.offscreen-container a').click(function(){
    	$('.offscreen-container').removeClass('reveal-nav');
    	$('.main-container').removeClass('reveal-nav');
    	$('nav').removeClass('reveal-nav');
    });
    
     // Disable parallax on mobile

    if ((/Android|iPhone|iPad|iPod|BlackBerry|Windows Phone/i).test(navigator.userAgent || navigator.vendor || window.opera)) {
        $('section').removeClass('parallax');
    }
    
    
    window.addEventListener("scroll", $scope.updateNav, false);
    
    // Initialize Masonry

    setTimeout(initializeMasonry, 1000);
  });
  
  $scope.responsiveClasses = function(){
    if( typeof jRespond === 'undefined' ) {
    	console.log('responsiveClasses: jRespond not Defined.');
    	return true;
    }
    
    var jRes = jRespond([
    	{
    		label: 'smallest',
    		enter: 0,
    		exit: 479
    	},{
    		label: 'handheld',
    		enter: 480,
    		exit: 767
    	},{
    		label: 'tablet',
    		enter: 768,
    		exit: 991
    	},{
    		label: 'laptop',
    		enter: 992,
    		exit: 1199
    	},{
    		label: 'desktop',
    		enter: 1200,
    		exit: 10000
    	}
    ]);
    jRes.addFunc([
    	{
    		breakpoint: 'desktop',
    		enter: function() { 
    			//console.log($body);
    			//$body.addClass('device-lg');
    			$scope.responsiveClass='device-lg';
    			$scope.$apply();
    			//console.log("Jrespond: desktop: enter");
    		},
    		exit: function() { 
    			//$body.removeClass('device-lg'); 
    			//console.log("Jrespond: desktop: exit");
    		}
    	},{
    		breakpoint: 'laptop',
    		enter: function() { 
    			//$body.addClass('device-md'); 
    			console.log($scope.responsiveClass);
    			$scope.responsiveClass='device-md'
    			$scope.$apply();
    			console.log("Jrespond: laptop: enter");
    		},
    		exit: function() { $body.removeClass('device-md'); }
    	},{
    		breakpoint: 'tablet',
    		enter: function() { 
    			//$body.addClass('device-sm'); 
    			$scope.responsiveClass='device-sm';
    			$scope.$apply();
    			console.log("Jrespond: tablet: enter");
    		},
    		exit: function() { 
    		  //$body.removeClass('device-sm'); 
    		}
    	},{
    		breakpoint: 'handheld',
    		enter: function() { 
    		  //$body.addClass('device-xs'); 
    		  $scope.responsiveClass='device-xs';
    		  $scope.$apply();
    		},
    		exit: function() { 
    		  //$body.removeClass('device-xs');
    		}
    	},{
    		breakpoint: 'smallest',
    		enter: function() { 
    		  //$body.addClass('device-xxs'); 
    		  $scope.responsiveClass='device-xxs';
    		  $scope.$apply();
    		},
    		exit: function() { $body.removeClass('device-xxs'); }
    	}
    ]);
  };
  $scope.updateNav = function() {
    var mr_scrollTop = $window.pageYOffset;
    //console.log($window.pageYOffset);
    //console.log($('#bg').position().top);
    var scrollY = mr_scrollTop;
    
    //$scope.parallaxY = scrollY*0.5;

    if (scrollY <= 0) {
      if ($scope.navFixed) {
          $scope.navFixed = false;
      }
      if ($scope.outOfSight) {
        $scope.outOfSight = false;
        $scope.goToTop = false;
      }
      if ($scope.navScrolled) {
        $scope.navScrolled = false;
      }
      $scope.$apply();
      return;
    }
    
    if (scrollY > mr_navOuterHeight + mr_fixedAt) {
      if (!$scope.navScrolled) {
          $scope.navScrolled = true;
          $scope.goToTop = true;
          $scope.navFixed = true;
          $scope.outOfSight = true;
          $scope.$apply();
          return;
      }
    } else {
      if (scrollY > mr_navOuterHeight) {
         if (!$scope.navFixed) {
              $scope.navFixed = true;
          }

          if (scrollY > mr_navOuterHeight +10) {
              if (!$scope.outOfSight) {
                  //mr_nav.addClass('outOfSight');
                  //$goToTopEl.fadeIn();
                  $scope.outOfSight = true;
                  $scope.goToTop = true;
              }
          } else {
              if ($scope.outOfSight) {
                  $scope.outOfSight = false;
                  //mr_nav.removeClass('outOfSight');
                  //$goToTopEl.fadeOut();
                  $scope.goToTop = false;
              }
          }
      } else {
          if ($scope.navFixed) {
              $scope.navFixed = false;
          }
          if ($scope.outOfSight) {
              $scope.outOfSight = false;
              $scope.goToTop = false;
          }
      }

      if ($scope.navScrolled) {
          $scope.navScrolled = false;
      }

    }
    $scope.$apply();
  }
}]);

function initializeMasonry(){
  $('.masonry').each(function(){
      var container = $(this).get(0);
      var msnry = new Masonry(container, {
          itemSelector: '.masonry-item'
      });

      msnry.on('layoutComplete', function() {

          mr_firstSectionHeight = $('.main-container section:nth-of-type(1)').outerHeight(true);

          // Fix floating project filters to bottom of projects container

          if ($('.filters.floating').length) {
              //setupFloatingProjectFilters();
              //updateFloatingFilters();
              window.addEventListener("scroll", updateFloatingFilters, false);
          }

          $('.masonry').addClass('fadeIn');
          $('.masonry-loader').addClass('fadeOut');
          if ($('.masonryFlyIn').length) {
              masonryFlyIn();
          }
      });

      msnry.layout();
  });
}

function masonryFlyIn() {
    var $items = $('.masonryFlyIn .masonry-item');
    var time = 0;

    $items.each(function() {
        var item = $(this);
        setTimeout(function() {
            item.addClass('fadeIn');
        }, time);
        time += 170;
    });
}

function setupFloatingProjectFilters() {
    mr_floatingProjectSections = [];
    $('.filters.floating').closest('section').each(function() {
        var section = $(this);

        mr_floatingProjectSections.push({
            section: section.get(0),
            outerHeight: section.outerHeight(),
            elemTop: section.offset().top,
            elemBottom: section.offset().top + section.outerHeight(),
            filters: section.find('.filters.floating'),
            filersHeight: section.find('.filters.floating').outerHeight(true)
        });
    });
}
/*
function updateFloatingFilters() {
    var l = mr_floatingProjectSections.length;
    while (l--) {
        var section = mr_floatingProjectSections[l];

        if ((section.elemTop < mr_scrollTop) && typeof window.mr_variant == "undefined" ) {
            section.filters.css({
                position: 'fixed',
                top: '16px',
                bottom: 'auto'
            });
            if (mr_navScrolled) {
                section.filters.css({
                    transform: 'translate3d(-50%,48px,0)'
                });
            }
            if (mr_scrollTop > (section.elemBottom - 70)) {
                section.filters.css({
                    position: 'absolute',
                    bottom: '16px',
                    top: 'auto'
                });
                section.filters.css({
                    transform: 'translate3d(-50%,0,0)'
                });
            }
        } else {
            section.filters.css({
                position: 'absolute',
                transform: 'translate3d(-50%,0,0)'
            });
        }
    }
}
*/
function initOwlMedia(){
  $("#owl-carousel-media").owlCarousel({
    items : 4,
    margin: 20,
    lazyLoad: true,
    nav: true,
    navText: ['<i class="icon-angle-left"></i>','<i class="icon-angle-right"></i>'],
    responsive:{
			0:{ items: 2},
			480:{ items: 2 },
			768:{ items: 3 },
			992:{ items: 4 },
			1200:{ items: 4 }
		},
		touchDrag: true,
		video: true,
  	animateIn: true,
  	animateOut: true
  });
}

function responsiveClasses(scope){
  if( typeof jRespond === 'undefined' ) {
  	console.log('responsiveClasses: jRespond not Defined.');
  	return true;
  }
  
  var jRes = jRespond([
  	{
  		label: 'smallest',
  		enter: 0,
  		exit: 479
  	},{
  		label: 'handheld',
  		enter: 480,
  		exit: 767
  	},{
  		label: 'tablet',
  		enter: 768,
  		exit: 991
  	},{
  		label: 'laptop',
  		enter: 992,
  		exit: 1199
  	},{
  		label: 'desktop',
  		enter: 1200,
  		exit: 10000
  	}
  ]);
  jRes.addFunc([
  	{
  		breakpoint: 'desktop',
  		enter: function() { 
  			//$body.addClass('device-lg');
  			scope.responsiveClass='device-lg'
  			//console.log("Jrespond: desktop: enter");
  		},
  		exit: function() { 
  			//$body.removeClass('device-lg'); 
  			//console.log("Jrespond: desktop: exit");
  		}
  	},{
  		breakpoint: 'laptop',
  		enter: function() { 
  			//$body.addClass('device-md'); 
  			
  			scope.responsiveClass='device-md'
  			//console.log("Jrespond: laptop: enter");
  		},
  		exit: function() { $body.removeClass('device-md'); }
  	},{
  		breakpoint: 'tablet',
  		enter: function() { 
  			//$body.addClass('device-sm'); 
  			scope.responsiveClass='device-sm';
  			//console.log("Jrespond: tablet: enter");
  		},
  		exit: function() { 
  		  //$body.removeClass('device-sm'); 
  		}
  	},{
  		breakpoint: 'handheld',
  		enter: function() { 
  		  //$body.addClass('device-xs'); 
  		  scope.responsiveClass='device-xs';
  		},
  		exit: function() { 
  		  //$body.removeClass('device-xs');
  		}
  	},{
  		breakpoint: 'smallest',
  		enter: function() { 
  		  //$body.addClass('device-xxs'); 
  		  scope.responsiveClass='device-xxs';
  		},
  		exit: function() { $body.removeClass('device-xxs'); }
  	}
  ]);
}

function initTabs(){
  // Tabbed Content

  $('.tabbed-content').each(function() {
      $(this).append('<ul class="content"></ul>');
  });

  $('.tabs li').each(function() {
      var originalTab = $(this),
          activeClass = "";
      if (originalTab.is('.tabs>li:first-child')) {
          activeClass = ' class="active"';
      }
      var tabContent = originalTab.find('.tab-content').detach().wrap('<li' + activeClass + '></li>').parent();
      originalTab.closest('.tabbed-content').find('.content').append(tabContent);
  });

  $('.tabs li').click(function() {
      $(this).closest('.tabs').find('li').removeClass('active');
      $(this).addClass('active');
      var liIndex = $(this).index() + 1;
      $(this).closest('.tabbed-content').find('.content>li').removeClass('active');
      $(this).closest('.tabbed-content').find('.content>li:nth-of-type(' + liIndex + ')').addClass('active');
  });
}
