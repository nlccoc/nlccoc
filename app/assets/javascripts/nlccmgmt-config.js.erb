/* global nlccmgmtapp */
nlccmgmtapp.config([
 '$stateProvider', 
 '$urlRouterProvider', 
 '$locationProvider', function($stateProvider, $urlRouterProvider, $locationProvider){
    $stateProvider.state('dashboard', {
      url: '/mgmts/dashboard',templateUrl: 'mgmts/home.html'/*,
      controller: 'mainCtrl'*/
    }).state('media-video', {
      url: '/mgmts/media-video',templateUrl: 'mgmts/media/video.html',
      controller: 'mediaVideoCtrl',
      resolve: {
        catResource: 'categoryFactory',
        locations: ['catResource',function(catResource){
          return catResource.getAllLocations();
        }]
      }
    }).state('media-audio', {
      url: '/mgmts/media-audio',templateUrl: 'mgmts/media/audio.html',
      resolve: {
        // A string value resolves to a service
        maudioResource: 'maudioFactory',
        // A function value resolves to the return
        // value of the function
        maudios: ['maudioResource',function(maudioResource){
          return maudioResource.getAllMaudios();
        }]
      },
      controller: 'mediaAudioCtrl'
    }).state('media-photo', {
      url: '/mgmts/media-photo',templateUrl: 'mgmts/media/photo.html'/*,
      controller: 'mainCtrl'*/
    }).state('media-library', {
      url: '/mgmts/media-library',templateUrl: 'mgmts/media/library.html',
      resolve: {
        libraryResource: 'libraryFactory',
        libraries: ['libraryResource', function(libraryResource){
          return libraryResource.getAllLibraries();
        }]
      },
      controller: 'libraryCtrl'
    }).state('library-upload', {
      url: '/mgmts/library-upload',templateUrl: 'mgmts/media/library.upload.html'/*,
      controller: 'mainCtrl'*/
    }).state('events-all', {
      url: '/mgmts/events-all',templateUrl: 'mgmts/events/all.html',
      controller: 'eventAllCtrl'
    }).state('event-detail', {
      url: '/mgmts/event/:eventID',templateUrl: 'mgmts/events/event.html',
      resolve: {
        // A string value resolves to a service
        eventResource: 'eventFactory',

        // A function value resolves to the return
        // value of the function
        event: ['eventResource', '$stateParams',function(eventResource, $stateParams){
          return eventResource.getEvent($stateParams.eventID);
        }]
      },
      controller: 'eventCtrl'
    }).state('event-edit', {
      url: '/mgmts/events/:eventID/edit',templateUrl: 'mgmts/events/event.edit.html',
      resolve: {
        // A string value resolves to a service
        eventResource: 'eventFactory',
        catResource: 'categoryFactory',
        // A function value resolves to the return
        // value of the function
        event: ['eventResource', '$stateParams',function(eventResource, $stateParams){
          return eventResource.getEvent($stateParams.eventID);
        }],
        categories: ['catResource',function(catResource){
          return catResource.getAllCategories();
        }]
      },
      controller: 'eventEditCtrl'
    }).state('event-new', {
      url: '/mgmts/events/new',templateUrl: 'mgmts/events/event.edit.html',
      controller: 'eventNewCtrl',
      resolve: {
        catResource: 'categoryFactory',
        categories: ['catResource',function(catResource){
          return catResource.getAllCategories();
        }],
        locations: ['catResource',function(catResource){
          return catResource.getAllLocations();
        }]
      }
    }).state('events-category', {
      url: '/mgmts/events-category',
      templateUrl: 'mgmts/events/category.html'/*,
      controller: 'eventCtrl'*/
    }).state('audio-new', {
      url: '/mgmts/audio-new',
      templateUrl: 'mgmts/media/audio.edit.html',
      controller: 'audioNewCtrl'
    }).state('maudio-edit', {
      url: '/mgmts/maudios/:maudioID/edit',
      templateUrl: 'mgmts/media/audio.edit.html',
      resolve: {
        // A string value resolves to a service
        maudioResource: 'maudioFactory',
        // A function value resolves to the return
        // value of the function
        maudio: ['maudioResource', '$stateParams',function(maudioResource, $stateParams){
          return maudioResource.getMaudio($stateParams.maudioID);
        }]
      },
      controller: 'mediaAudioEditCtrl'
    }).state('mvideo-new', {
      url: '/mgmts/mvideo-new',
      templateUrl: 'mgmts/media/video.edit.html',
      controller: 'mvideoNewCtrl',
      resolve: {
        catResource: 'categoryFactory',
        locations: ['catResource',function(catResource){
          return catResource.getAllLocations();
        }]
      }
    }).state('mvideo-edit', {
      url: '/mgmts/mvideos/:mvideoID/edit',
      controller: 'mediaVideoEditCtrl', 
      templateUrl: 'mgmts/media/video.edit.html',
      resolve: {
        catResource: 'categoryFactory',
        locations: ['catResource',function(catResource){
          return catResource.getAllLocations();
        }],
        mvideoResource: 'mvideoFactory',
        mvideo: ['mvideoResource', '$stateParams',function(mvideoResource, $stateParams){
          return mvideoResource.getMvideo($stateParams.mvideoID);
        }]
      }
    })
    .state('user-profile', {
      url: '/mgmts/user-profile',templateUrl: 'mgmts/profile.html'/*,
      controller: 'mainCtrl'*/
    });
    
    $urlRouterProvider.otherwise('/mgmts/dashboard');
    $locationProvider.html5Mode({
       enabled:true,
       requireBase: false
    });
}]);