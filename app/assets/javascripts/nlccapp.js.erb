/* global angular */
//var nlccapp = angular.module('nlcc',['ui.router', 'templates', 'oc.lazyLoad', 'nlcc.factory', 'nlcc.tools']);
var nlccapp = angular.module('nlcc', []);
//var nlccext = angular.module('nlccext', ['nlcc.tools']);

nlccapp.config(['$sceDelegateProvider', function($sceDelegateProvider) {
  $sceDelegateProvider.resourceUrlWhitelist([
    // Allow same origin resource loads.
    'self',
    // Allow loading from our assets domain.  Notice the difference between * and **.
    'https://files.nlccoc.org/**'
  ]);
}]);
  
nlccapp.controller('bibleSearchCtrl', ['$scope', '$timeout', '$http', function($scope, $timeout, $http){
  console.log('Bible Search Controller');
  $scope.submitting=false;
  var _url = '/biblesearch.json';
  $scope.search = {
    keyword: '',
    version: 'cnvt'
  }

  $scope.result={}
  $scope.result.book_count=-1;
  $scope.submit = function(){
    $scope.submitting = true;
    $scope.results={}
    var _url='/bible/search.json'
    $http({
      method: 'POST',
      url: _url,
      headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      },
      data: {
        "utf8": "âœ“",
        "keyword": $scope.search.keyword,
        "version": $scope.search.version
      }
    }).then(function(data){
      $scope.results=data.data;
      $timeout(function(){
       // console.log("highlight");
        $('.result').highlight($scope.search.keyword);
        initInnerlink();
        
        var $sections = $('.book-section');
  
        // The user scrolls
        $(window).scroll(function(){
          var currentScroll = $(this).scrollTop();
    
          // $currentSection is somewhere to place the section we must be looking at
          var $currentSection;
          
          $sections.each(function(){
            // divPosition is the position down the page in px of the current section we are testing 
            
            var divPosition = $(this).offset().top;
            
            // If the divPosition is less the the currentScroll position the div we are testing has moved above the window edge.
            // the -1 is so that it includes the div 1px before the div leave the top of the window.
            if( divPosition - 100 < currentScroll ){
              // We have either read the section or are currently reading the section so we'll call it our current section
              $currentSection = $(this);
              //console.log("Current section");
              // console.log($currentSection.attr('id'))
              
              // If the next div has also been read or we are currently reading it we will overwrite this value again. This will leave us with the LAST div that passed.
            }
          });
          if(typeof $currentSection != 'undefined') {
            var id = $currentSection.attr('id');
         	  $('a').removeClass('on');
         	  var button_name = 'a[href="#' + id + '"]';
         	  $(button_name).addClass('on');
         	  
          }
          //console.log($currentSection.attr('id'))
          
          //var id = $currentSection.attr('id');
       	 //$('a').removeClass('active');
       	 //$("[href=#"+id+"]").addClass('active');
    
        });
      },200)
      $scope.submitting = false;
    }, function(){
      console.log("There is an error");
      $scope.submitting = false;
    });
  }
}]);

nlccapp.controller('newslettersCtrl', ['$scope', '$timeout', '$http', function($scope, $timeout, $http){
  console.log('Newsletters Controller');
  $scope.newsletters = [];
  $http({
      method: 'GET',
      url: '/newsletters.json',
      headers: {
        'X-CSRF-Token': $('meta[name="csrf-token"]').attr('content')
      }
    }).then(function(data){
      $scope.newsletters = data.data.newsletters;
      for ( var i=0; i < $scope.newsletters.length; i++) {
        $scope.newsletters[i].date = moment($scope.newsletters[i].date).format('YYYY-MM-DD');
      }
    });
    
}]);

nlccapp.controller('weeklynewspaperCtrl', ['$scope', function($scope){
  console.log("Weeklynewspaper Controller");
  $scope.items = [];
  for (var i = 0; i < 24 ; i++)
  {
		$scope.items.push({
			fileName: 	"File name " + (i + 1) + " ",
      description:"PDF " +       (i + 1) + "'s description."
		  });
  }
}]);

nlccapp.controller('pdfviewerCtrl', ['$scope', '$sce', function($scope, $sce){
  console.log("PDFviewer Controller");
  $sce.getTrustedResourceUrl('https://files.nlccoc.org/uploads/library/attachment/311/to-our-god-A.pdf');
  $scope.pdfName = 'Relativity: The Special and General Theory by Albert Einstein';
  $scope.pdfUrl = 'pdf/relativity.pdf';
  $scope.pdfPassword = 'test';
  $scope.scroll = 0;
  $scope.loading = 'loading';

  $scope.getNavStyle = function(scroll) {
    if(scroll > 100) return 'pdf-controls fixed';
    else return 'pdf-controls';
  }

  $scope.onError = function(error) {
    console.log(error);
  }

  $scope.onLoad = function() {
    $scope.loading = '';
  }

  $scope.onProgress = function (progressData) {
    console.log(progressData);
  };

  $scope.onPassword = function (updatePasswordFn, passwordResponse) {
    if (passwordResponse === PDFJS.PasswordResponses.NEED_PASSWORD) {
        updatePasswordFn($scope.pdfPassword);
    } else if (passwordResponse === PDFJS.PasswordResponses.INCORRECT_PASSWORD) {
        console.log('Incorrect password')
    }
  };

}]);